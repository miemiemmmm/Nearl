# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.9", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check the github's hardware system
      run: |
        echo "Check the current working directory" 
        pwd
        ls -la
        ls ~
        echo "Linux kernel version:"
        uname -r
        echo "Check the CPU information"
        lscpu
        echo "Check the GPU information" 
        lspci | grep -i --color 'vga\|3d\|2d'
        echo "Check the memory"
        free -h
        echo "Check the python/pip versions"
        python --version
        pip --version

    - name: Install the micromamba
      run: |
        echo "-----> Installing the micromamba"
        mkdir -p ./tmp_mamba
        curl https://gist.githubusercontent.com/miemiemmmm/40d2e2b49e82d682ef5a7b2aa94a243f/raw/94eb8ad3c087647426520d5f579c1e63683ee140/install_micromamba.sh -o tmp_mamba/install_mamba.sh
        bash ./tmp_mamba/install_mamba.sh ./tmp_mamba
        ls -la tmp_mamba/
        [ -f ./tmp_mamba/bin/micromamba ] && echo "micromamba is installed" || echo "micromamba is not installed"

    - name: Install dependencies
      run: |
        echo "-----> Install dependencies "
        # Use the new installed conda for the following installation
        # if [ -f ./micromamba/bin/micromamba ]; then 
        #   export PATH="$PWD/micromamba/bin:$PATH"
        #   export MAMBA_EXE=$PWD/micromamba/bin/micromamba
        #   export MAMBA_ROOT_PREFIX=$PWD/micromamba
        #   eval "$(micromamba shell hook --shell bash --root-prefix ${MAMBA_ROOT_PREFIX})"
        # else
        #   echo "micromamba is not installed"
        #   exit 1
        # fi
        source ./tmp_mamba/bin/loadmamba
        envname="testenv"
        bash scripts/misc/create_env_mamba.sh ${envname}
        micromamba activate $envname

        echo "########## Check the mamba activation status"
        micromamba list
        

    - name: Build the package
      run: |
        echo "########## Building the package "
        # Since environment variables are not passed to the next step, we need to activate the environment again
        source ./tmp_mamba/bin/loadmamba
        envname="testenv"
        micromamba activate $envname
        python -m build 
        
        find 

        
